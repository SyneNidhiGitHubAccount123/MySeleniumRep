<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="LearningRestAssured">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/io/rest-assured/rest-assured/4.5.1/rest-assured-4.5.1.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/groovy/groovy/3.0.9/groovy-3.0.9.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/groovy/groovy-xml/3.0.9/groovy-xml-3.0.9.jar"/>
        <pathelement location="../../.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar"/>
        <pathelement location="../../.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar"/>
        <pathelement location="../../.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar"/>
        <pathelement location="../../.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar"/>
        <pathelement location="../../.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar"/>
        <pathelement location="../../.m2/repository/io/rest-assured/json-path/4.5.1/json-path-4.5.1.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/groovy/groovy-json/3.0.9/groovy-json-3.0.9.jar"/>
        <pathelement location="../../.m2/repository/io/rest-assured/rest-assured-common/4.5.1/rest-assured-common-4.5.1.jar"/>
        <pathelement location="../../.m2/repository/io/rest-assured/xml-path/4.5.1/xml-path-4.5.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar"/>
        <pathelement location="../../.m2/repository/org/testng/testng/6.10/testng-6.10.jar"/>
        <pathelement location="../../.m2/repository/com/beust/jcommander/1.48/jcommander-1.48.jar"/>
        <pathelement location="../../.m2/repository/org/json/json/20180813/json-20180813.jar"/>
        <pathelement location="../../.m2/repository/org/apache/juneau/juneau-marshall/8.2.0/juneau-marshall-8.2.0.jar"/>
        <pathelement location="../../.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar"/>
    </path>
    <path id="LearningRestAssured.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/resources">
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/main/resources"/>
            <exclude name="**"/>
            <classpath refid="LearningRestAssured.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <src path="src/test/resources"/>
            <exclude name="**"/>
            <classpath refid="LearningRestAssured.classpath"/>
        </javac>
    </target>
<target name="compile" depends="init, clean">
<delete includeemptydirs="true" quiet="true">
<fileset dir="${test.dest}" includes="**/*"/>
</delete>
<echo message="making directory..."/>
<mkdir dir="${test.dest}"/>
<echo message="classpath------: ${test.classpath}"/>
<echo message="compiling..."/>
<javac debug="true" destdir="${test.dest}" srcdir="${test.src}" target="1.5" classpath="${test.classpath}"> </javac>
</target>
<target name="run">
<delete includeemptydirs="true" quiet="true">
<fileset dir="${test.reportsDir}" includes="**/*"/>
</delete>
<java jar="${ws.jars}" fork="true" spawn="true"/>
<junit fork="yes" haltonfailure="no" printsummary="yes">
<classpath refid="testcase.path"/>
<!--   <classpath ="${test.classpath}"/>  -->
<batchtest todir="${test.reportsDir}" fork="true">
<fileset dir="${test.dest}">
<include name="testscript/DriverScript.class"/>
<!-- include name="tests/suite1/FirstSuiteRunner.class" />
<include name="tests/suite1/FirstSuiteRunner.class" / -->
</fileset>
</batchtest>
<formatter type="xml"/>
<classpath refid="testcase.path"/>
</junit>
<junitreport todir="${test.reportsDir}">
<fileset dir="${test.reportsDir}">
<include name="TEST-*.xml"/>
</fileset>
<report todir="${test.reportsDir}"/>
</junitreport>
</target>
<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
</project>
